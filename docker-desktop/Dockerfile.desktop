#####
# Used to generate the 'wardf/desktop' docker container.
# This is accessed either via a VNC client or a web browser,
# thanks to 'noVNC'.
#####

#####
# Common stuff at front.
#####

FROM ubuntu:utopic
MAINTAINER Ward Fisher <ward.fisher@gmail.com>
ENV DEBIAN_FRONTEND noninteractive

#####
# Install packages and update the system.
#####

RUN apt-get update
RUN apt-get -y upgrade

###
# Install some utilities
###
RUN apt-get install -y man nano curl git emacs wget

###
# Install developer tools
###
RUN apt-get install -y gcc g++ gfortran clang gdb
RUN apt-get install -y autoconf automake make libtool m4 bison flex zlib1g-dev libjpeg-dev cmake libcurl4-openssl-dev

###
# Install Desktop, VNC, noVNC stuff.
###
RUN apt-get install -y x11vnc xvfb xinit lxde wmctrl python firefox

#####
# Add a non-root user, but allow that user
# unfettered sudo access.
#####
ENV CUSER ubuntu

RUN useradd -ms /bin/bash ${CUSER}
RUN adduser ${CUSER} sudo
RUN echo "${CUSER}:password.1234" | chpasswd

RUN echo "${CUSER} ALL=NOPASSWD: ALL" >> /etc/sudoers

#####
# Switch over to non-root user,
# configure system and environment.
#####
USER ${CUSER}
ENV HOME /home/${CUSER}
WORKDIR /home/${CUSER}

#####
# Grab the noVNC project.
#####

RUN git clone git://github.com/kanaka/noVNC
RUN ln -s /home/${CUSER}/noVNC/vnc_auto.hml /home/${CUSER}/noVNC/index.html

#####
# Configure vnc, xvfb.
# Taken from https://docs.docker.com/reference/builder/#entrypoint
#####

###
# Create the .xinitrc file.
# This will be invoked when xinit is called from the initial
# command script.
###

RUN mkdir ~/.vnc
RUN echo '/usr/bin/x11vnc -display :1 -autoport 5901 -forever &' > ~/.xinitrc
RUN echo '/usr/bin/startlxde' >> ~/.xinitrc

#####
# Initialize environmental variables, expose
# ports, etc.
#####

EXPOSE 5901
EXPOSE 6080

###
# If not true, noVNC will not run.
###
ENV USENOVNC TRUE

###
# Variables to dictate windows session geometry and color depth.
###
ENV SIZEH 1280
ENV SIZEW 800
ENV CDEPTH 24

#####
# Do some user configuration.
#
# * Configure git
# * Configure emacs
# * configure .bashrc with aliases
#####

RUN git config --global user.email "wfisher@ucar.edu"
RUN git config --global user.name "Ward Fisher"
RUN git config --global push.default simple
RUN git config --global credential.helper 'cache --timeout=3600'

RUN echo "alias desk='cd $HOME/Desktop'" >> $HOME/.bashrc


#####
# Copy over scripts, configuration files, readme, etc.
#####

###
# Make some directories.
###

RUN mkdir -p /home/${CUSER}/local/bin
RUN mkdir -p /home/${CUSER}/docs

###
# Copy over files.
###

COPY startdesktop.sh /home/${CUSER}/
#RUN chmod 755 /home/${CUSER}/local/bin/startdesktop.sh

COPY README.md /home/${CUSER}/docs/
COPY Dockerfile.desktop /home/${CUSER}/docs/
COPY self_unsigned.pem /home/${CUSER}/docs/
COPY emacs-small.el /home/${CUSER}/
RUN mv /home/${CUSER}/emacs-small.el /home/${CUSER}/.emacs

#####
# Cleanup
#####
USER root
RUN apt-get -y clean
RUN apt-get -y autoclean
RUN apt-get -y purge
RUN chown -R ${CUSER} /home/${CUSER}/

#####
# Kick off the session with the following
# script.
#####
USER ${CUSER}
CMD /home/${CUSER}/startdesktop.sh